variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '3.1.300'
  releaseBranchName: 'release'

trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: $(dotnetSdkVersion)

    - template: pipline_templates/build.yml
      parameters:
        buildConfiguration: 'Release'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()
- stage: 'Dev'
  displayName: 'Deploy tto dev environment'
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: api'
            inputs:
              azureSubscription: 'az-2020q4 - Azure'
              appName: '$(WebAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/Azure2020q4API.zip'